name: Test setup-bonsai
on:
  push:
  workflow_dispatch:
jobs:
  run:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Windows x64
            os: windows-latest
            rid: win-x64
          - name: Ubuntu 22.04 x64
            os: ubuntu-22.04
            rid: linux-x64
          #- name: Ubuntu 24.04 x64
          #  os: ubuntu-24.04
          #  rid: linux-x64
          - name: macOS 13
            os: macos-13
            rid: osx-x64
          #- name: macOS 14
          #  os: macos-14
          #  rid: osx-arm64
          #- name: macOS 15
          #  os: macos-15
          #  rid: osx-arm64
    name: Test setup-bonsai on ${{matrix.platform.name}}
    runs-on: ${{matrix.platform.os}}
    steps:
      - uses: actions/checkout@v4
      #- name: Setup Mono
      #  if: matrix.platform.os == 'ubuntu-24.04'
      #  #if: runner.os == 'Linux'
      #  # Derived from https://github.com/actions/runner-images/blob/ae99c16b0cf27c0cca7ef0b08e7bcf13c33f6cfa/images/ubuntu/scripts/build/install-mono.sh
      #  run: |
      #    curl -fsSL https://download.mono-project.com/repo/xamarin.gpg | sudo gpg --dearmor -o /usr/share/keyrings/mono-official-stable.gpg
      #    echo "deb [signed-by=/usr/share/keyrings/mono-official-stable.gpg] https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
      #    sudo apt-get update
      #    sudo apt-get install --no-install-recommends apt-transport-https mono-complete nuget
      #    mono --version
      - name: Setup Bonsai Environments
        uses: NgrDavid/setup-bonsai@main
        with:
          environment-paths: |
            **/.bonsai/
          inject-packages: |
            test-packages/*.nupkg
        env:
          NODE_OPTIONS: --enable-source-maps
      #- name: Generate Images
      #  if: runner.os != 'Linux'
      #  run: pwsh ./docs/export-images.ps1 -Verbose
      #- name: Generate Images (Linux)
      #  if: runner.os == 'Linux'
      #  run: xvfb-run pwsh ./docs/export-images.ps1 -Verbose
      #- name: Collect Images
      #  if: always()
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: images.${{matrix.platform.rid}}.${{matrix.platform.os}}
      #    path: '**/*.svg'
      #    if-no-files-found: error
      #    retention-days: 10

